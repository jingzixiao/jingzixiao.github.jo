   1-Canvas 画布 帆布

        HTML5中新增的一个标签
        canvas标签的默认宽高为：300 * 150
        canvas标签可以通过设置表格的宽高的形式，为其设置宽高
        canvas也可以通过style，css的方式设置宽高，但是会有拉伸的效果（不推荐使用这种方式）
        canvas标签中的内容，在支持canvas中的浏览器中，会被忽略
        在不支持canvas的浏览器当中，canvas标签会被当做div标签来处理，所以里面的内容也会整的显示出来
        在canvas标签中的内容，一般是做兼容性提示的！！！告诉用户浏览器不支持
        canvas标签他的兼容性非常强大，所以，一般的浏览器中，只要支持canvas，那么他一定支持canvas的全部功能

        canvas是一个画布
        画布不能自己画画，画画要通过画图工具
        
        
 2-画图：
      1-.获取canvas对象
      var cas = document.querySelector("#c");
      2.获取画图工具，每个画布都有自己单独的画图工具(绘图上下文)
      var ctx = cas.getContext("2d");
      console.log(ctx);   CanvasRenderingContext2D

      3.告诉绘图工具，要从哪里下笔
      ctx.moveTo(100, 100);

      4.告诉画图工具，要画到哪里去  （描点）
      ctx.lineTo(400, 100);

      5.开始画线
     ctx.stroke();
3-      moveTo移动的时候，不会留下痕迹，
        lineTo移动式会留下痕迹
        stroke一般情况下都是在把所有的线描完之后最后进行一次画线
        如果在stroke之后，还有描点的操作，则下次的stroke，会将上面的stroke之前的点重新绘制一次

4-闭合路径  最后一个lineTo的点和最后一个moveTo的点进行连线
        在lineTo之后，做一个小拐弯，就可以将拐角补全
        closePath会自动的补全缺角

5-fiil 就是用来填充图形的，
          如果图形没有闭合，会相当于调用了一次只给fill使用的closePath方法

6-    路径中，包含画笔的状态
      画笔的粗细，画笔的样式，填充的样式。。
      想要更改样式的时候，就必须开辟新的路径

      开辟新的路径之后的stroke，fill对开辟新的路径之前的描点是不会有任何的操作的
      只会对当前开辟的新的路径中的点进行操作

7-非零环绕原则

8-开始新的路径是，需要使用beginpath
9-    setLineDash(数组)
      设置的是虚线中，实线和空白的宽度
      会将数组中的元素，依次作为实线和虚线的宽度，轮流着往后应用
      如果只有1个元素， 那么所有的实现和虚线宽度一致
      如果有两个元素，第一个就是实线的宽度，第二个就是空白的宽度
      如果有多个元素，就会循环着将数组的每一个元素应用起来，依次向后推作为宽度

      如果想要设置为实线，这setLineDash中传递一个空数组就可以了


      ctx.lineDashOffset = -5;
      可以设置虚线的偏移量，如果为正值，则向移动，如果是负值，则向右移动
      如果手动设置了虚线宽度，那么getLinedash获取到的就是设置的数组
      如果没有手动设置（实线的时候），那么获取到的是一个空数组


9-    strokeStyle 可以用来设置描线的颜色
      beginPath之后绘图工具的状态不会恢复到默认的状态，而是会将之前的保留下来
      
       beginPath会清除上一个路径中保存的最后一个点
       在beginPath之后需要重新设置落笔点